<launch>
    <arg name="directory" default="/home/wu/Documents/biorobotics"/>

    <arg name="camera_intrinsic" default="0"/>

    <arg name="camera_rect_intrinsic" default="0"/>
    <arg name="hand_eye" default="0"/>
    
    <arg name="laser_cam" default="0"/>


    <!-- <include file="$(find ur_robot_driver)/launch/ur5e_bringup.launch"> 
        <arg name="robot_ip" value = "$(arg robot_ip)" />
        <arg name="kinematics_config" value = "$(arg kinematics_config)"/>
    </include>

    <include file="$(find ur5e_moveit_config)/launch/ur5e_moveit_planning_execution.launch"/> -->
    <!-- <include file="$(find usb_cam)/launch/blaser_cam_bring_up.launch"/>
    <include file="$(find apriltag_ros)/launch/continuous_detection.launch"/> -->

    <group if="$(eval arg('camera_intrinsic') == 1)">
        <node name="trajectory_planner_node" pkg="gripper_blaser_ros" type="trajectory_planner_node" output="screen" args = "0"/> 
        <node name="image_saving_node" pkg="gripper_blaser_ros" type="image_saving_node" output="screen" args="$(arg directory)"/>
        <rosparam file="$(dirname)/../cfg/trajectory_planner.yaml"/> 
        <rosparam>
            cameraTopic: "/ximea_cam/image_raw"
        </rosparam>
    </group>

    <group if="$(eval arg('camera_rect_intrinsic') == 1)">
        <node name="trajectory_planner_node" pkg="gripper_blaser_ros" type="trajectory_planner_node" output="screen" args = "0)"/> 
        <node name="image_saving_node" pkg="gripper_blaser_ros" type="image_saving_node" output="screen" args="$(arg directory)"/>
        <node name="image_rect_node" pkg="gripper_blaser_ros" type="image_rect_node" output="screen" args="$(find gripper_blaser_ros)/cfg/ximea_80_calib.yaml" />
        <rosparam file="$(dirname)/../cfg/trajectory_planner.yaml"/>
        <rosparam file="$(dirname)/../cfg/calib_params.yaml"/> 
        <rosparam>
            cameraTopic: "/blaser_cam/image_rect_color"
        </rosparam>
    </group>

    <group if="$(eval arg('hand_eye') == 1)">
        <!-- <node name="trajectory_planner_node" pkg="gripper_blaser_ros" type="trajectory_planner_node" output="screen" args = "1 $(arg numPointsPerVertArc) $(arg numVertArc) $(arg numRadius)"/> -->
        <!-- <node name="tf_saving_node" pkg="gripper_blaser_ros" type="tf_saving_node" output="screen" args="$(arg directory)"/> -->
        <node name="image_rect_node" pkg="gripper_blaser_ros" type="image_rect_node" output="screen" args="$(find gripper_blaser_ros)/cfg/ximea_80_calib.yaml" />
        <include file="$(find apriltag_ros)/launch/continuous_detection.launch"/>
        <rosparam file="$(dirname)/../cfg/calib_params.yaml"/> 
        <!-- <node name="rqt_dashboard" pkg="rqt_gui" type="rqt_gui" respawn="false" output="screen" args=" perspective-file $(find gripper_blaser_ros)/cfg/auto_calibration.perspective"/>     -->
    </group>

    <group if="$(eval arg('laser_cam') == 1)">
        <!-- <node name="trajectory_planner_node" pkg="gripper_blaser_ros" type="trajectory_planner_node" output="screen" args = "2 $(arg numLinePerPlane) $(arg numPlaneAngles) $(arg numPlanePerCircle)"/> -->
        <node name="image_saving_node" pkg="gripper_blaser_ros" type="image_saving_node" output="screen" args="$(arg directory)"/>
        <rosparam>
            cameraTopic: "/blaser_cam/image_rect_color"
        </rosparam>
    </group>

</launch>
